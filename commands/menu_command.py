from aiogram import Router, F
from aiogram.enums import ChatType
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardButton, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder

from core import constants
from core.command_utils import bot_send_message, bot_edit_message, callback_check_is_game_active
from game import game_main
from game import start_game
from game.classes.player_ship import Ship

router = Router(name="menu_command_router")


async def update_menu(menu_name: str, chat_id: int, message_id: int, old_text: str):
    match menu_name:
        case "computer":
            new_text = get_computer_text(chat_id)
            if new_text != old_text:
                await bot_edit_message(chat_id, message_id,
                                       new_text, get_back_keyboard().as_markup())
            else:
                if constants.DEBUG_MODE:
                    print("–¢–µ–∫—Å—Ç –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é.")
        case "navigation":
            new_text = "–ù–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ."
            if new_text != old_text:
                await bot_edit_message(chat_id, message_id,
                                       new_text, get_back_keyboard().as_markup())
            else:
                if constants.DEBUG_MODE:
                    print("–¢–µ–∫—Å—Ç –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é.")
        case "captain":
            new_text = "–ù–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ. –ü–æ–∫–∞ —á—Ç–æ"
            if new_text != old_text:
                await bot_edit_message(chat_id, message_id,
                                       new_text, get_back_keyboard().as_markup())
            else:
                if constants.DEBUG_MODE:
                    print("–¢–µ–∫—Å—Ç –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é.")


@router.callback_query(F.data == "menu_start_game")
async def create_new_game_callback(callback: CallbackQuery):
    if game_main.is_game_active(callback.message.chat.id):
        return
    # –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–∞—Ö / –∫–∞–Ω–∞–ª–∞—Ö. –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ, —è –Ω–∞–¥–µ—é—Å—å.
    if callback.message.chat.type != ChatType.PRIVATE:
        await callback.answer(
            text="‚ùå –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö.",
            show_alert=True
        )
        return
    await callback.answer(text="–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–≥—Ä—É...")
    await start_game.start_new_game(callback.message.chat.id, callback.message.message_id)


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥ (–≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é).
def get_back_keyboard() -> InlineKeyboardBuilder:
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="menu_back"
        ),
        InlineKeyboardButton(
            text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
            callback_data="menu_update_screen"
        )
    )
    return builder


@router.callback_query(F.data == "menu_back")
async def bot_menu_back(callback: CallbackQuery):
    if not await callback_check_is_game_active(callback):
        return
    await callback.answer("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    await bot_send_menu(callback.message.chat.id, callback.message.message_id)


@router.callback_query(F.data == "menu_update_screen")
async def bot_update_menu(callback: CallbackQuery):
    if not await callback_check_is_game_active(callback):
        return
    await update_menu(game_main.ALL_PLAYERS[callback.message.chat.id].screen, callback.message.chat.id,
                      callback.message.message_id, callback.message.text)
    await callback.answer("–û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é ...")


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –≤–≤–æ–¥–∏—Ç –∫–æ–º–∞–Ω–¥—É –º–µ–Ω—é, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –∏–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞.
def get_create_game_keyboard() -> InlineKeyboardBuilder:
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="üöÄ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É",
            callback_data="menu_start_game"
        )
    )
    return builder


def get_computer_text(chat_id: int) -> str:
    ship: Ship = game_main.ALL_PLAYERS[chat_id]
    return (
        f"üöÄ –ö–æ—Ä–∞–±–ª—å {ship.ship_name}\n"
        "–°–æ—Å—Ç–æ—è–Ω–∏–µ: üü¢\n"
        "======\n"
        f"üí® –°–∫–æ—Ä–æ—Å—Ç—å: {ship.speed}\n"
        f"üõ° –ü—Ä–æ—á–Ω–æ—Å—Ç—å: {ship.health}%\n"
    )


@router.callback_query(F.data == "menu_computer")
async def computer(callback: CallbackQuery):
    if not await callback_check_is_game_active(callback):
        return
    game_main.ALL_PLAYERS[callback.message.chat.id].screen = "computer"
    await update_menu("computer", callback.message.chat.id, callback.message.message_id, callback.message.text)


@router.callback_query(F.data == "navigation_menu")
async def navigation(callback: CallbackQuery):
    if not await callback_check_is_game_active(callback):
        return
    game_main.ALL_PLAYERS[callback.message.chat.id].screen = "navigation"
    await update_menu("navigation", callback.message.chat.id, callback.message.message_id, callback.message.text)


@router.callback_query(F.data == "menu_captain")
async def navigation(callback: CallbackQuery):
    if not await callback_check_is_game_active(callback):
        return
    game_main.ALL_PLAYERS[callback.message.chat.id].screen = "captain"
    await update_menu("captain", callback.message.chat.id, callback.message.message_id, callback.message.text)


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
def get_game_main_keyboard() -> InlineKeyboardBuilder:
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="üñ• –ö–æ–º–ø—å—é—Ç–µ—Ä",
            callback_data="menu_computer"
        ),
        InlineKeyboardButton(
            text="üó∫ –ù–∞–≤–∏–≥–∞—Ü–∏—è",
            callback_data="navigation_menu"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="‚öìÔ∏è –ì–ª–∞–≤–Ω—ã–π –æ—Ç—Å–µ–∫",
            callback_data="menu_captain"
        )
    )
    return builder


# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def bot_send_menu(chat_id: int, message_id: int = None):
    game_main.ALL_PLAYERS[chat_id].screen = "main"
    if message_id is None:
        await bot_send_message(chat_id, "–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∞–±–ª—ë–º", get_game_main_keyboard().as_markup())
    else:
        await bot_edit_message(chat_id, message_id, "–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∞–±–ª—ë–º", get_game_main_keyboard().as_markup())


@router.message(Command("menu"))
async def send_game_menu(message: Message):
    if not game_main.is_game_active(message.chat.id):
        await bot_send_message(message.chat.id, "‚ùå –ò–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞!", get_create_game_keyboard().as_markup())
    else:
        await bot_send_menu(message.chat.id)
