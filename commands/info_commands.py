from aiogram import Router, F
from aiogram.enums import ChatType
from aiogram.filters import CommandStart
from aiogram.types import Message, InlineKeyboardButton, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder

from core import constants
from core.command_utils import bot_send_message, bot_edit_message
from game import start_game
from game.game_main import is_game_active

router = Router(name="info_commands_router")


@router.callback_query(F.data == "play_callback")
async def bot_start_game(callback: CallbackQuery):
    # –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–∞—Ö / –∫–∞–Ω–∞–ª–∞—Ö. –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ, —è –Ω–∞–¥–µ—é—Å—å.
    if callback.message.chat.type != ChatType.PRIVATE:
        await callback.answer(
            text="‚ùå –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö.",
            show_alert=True
        )
        return
    # –ï—Å–ª–∏ –∏–≥—Ä–∞ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞, –∑–∞–ø—Ä–µ—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∏–≥—Ä—ã.
    if is_game_active(callback.message.chat.id):
        await callback.answer(
            text="‚ùå –ò–≥—Ä–∞ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞!",
            show_alert=True
        )
        return
    await callback.answer(text="–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–≥—Ä—É...")
    await start_game.start_new_game(callback.message.chat.id, callback.message.message_id)


@router.callback_query(F.data == "help_callback")
async def help_bot_callback(callback: CallbackQuery):
    await callback.answer(
        text="–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å!\n\n–ü–æ–º–æ—â—å —Å –±–æ—Ç–æ–º –ø–µ—Ä–µ–µ–¥–µ—Ç –Ω–∞ –Ω–∞—à GitHub –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
        show_alert=True
    )


@router.callback_query(F.data == "info_callback_exit")
async def info_close(callback: CallbackQuery):
    await send_start_command_text(callback.message.chat.id, True, callback.message.message_id)


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –º–µ–Ω—é –û–± –∏–≥—Ä–µ.
def get_info_keyboard() -> InlineKeyboardBuilder:
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="–ù–∞–∑–∞–¥",
            callback_data="info_callback_exit"
        )
    )
    return builder


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –û–± –∏–≥—Ä–µ
@router.callback_query(F.data == "info_callback")
async def info_bot_callback(callback: CallbackQuery):
    # –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
    text = (
        f"–û—Ç–∫—Ä—ã—Ç—ã–π –∫–æ—Å–º–æ—Å - –∏–≥—Ä–æ–≤–æ–π –±–æ—Ç –ø—Ä–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –∫–æ—Å–º–æ—Å–µ –æ—Ç {constants.DEVELOPER_USERNAME}.\n"
        f"–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –∏ –ø–æ–º–æ—â—å —Å –∏–≥—Ä–æ–π: {constants.GITHUB_LINK}\n"
    )
    await bot_edit_message(callback.message.chat.id, callback.message.message_id, text, get_info_keyboard().as_markup())


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é.
def get_main_info_commands_keyboard() -> InlineKeyboardBuilder:
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="–ò–≥—Ä–∞—Ç—å üöÄ",
            callback_data="play_callback"
        ),
        InlineKeyboardButton(
            text="–ü–æ–º–æ—â—å ‚ùì",
            callback_data="help_callback"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="–û–± –∏–≥—Ä–µ ‚öôÔ∏è",
            callback_data="info_callback"
        )
    )
    return builder


# –ó–∞–º–µ–Ω—è–µ—Ç –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –º–µ–Ω—é.
async def send_start_command_text(chat_id: int, edit_text: bool = False, message_id: int = None):
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–æ—Å–º–æ—Å.\n"
        "–≠—Ç–æ –∏–≥—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –í–∞–º –Ω—É–∂–Ω–æ –≤—ã–∂–∏—Ç—å –≤ –∫–æ—Å–º–æ—Å–µ –Ω–∞ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–º –∫–æ—Ä–∞–±–ª–µ.\n"
    )
    if not edit_text:
        await bot_send_message(chat_id, text, get_main_info_commands_keyboard().as_markup())
    else:
        await bot_edit_message(chat_id, message_id, text, get_main_info_commands_keyboard().as_markup())


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ (—Å –∫–Ω–æ–ø–∫–∞–º–∏).
@router.message(CommandStart())
async def start_command_handler(message: Message):
    await send_start_command_text(chat_id=message.chat.id)
