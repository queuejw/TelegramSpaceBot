import asyncio
import random

from aiogram import F, Router
from aiogram.types import CallbackQuery

from commands.menu import menu_main
from commands.menu.menu_keyboards import get_menu_navigation_keyboard, get_on_planet_menu_navigation_keyboard
from core import constants
from core.command_utils import callback_check_is_game_active, bot_edit_message, bot_send_message
from game import game_main
from game.classes.planet import Planet
from game.classes.player_ship import Ship
from game.game_cycles import fly_cycle

menu_router = Router(name="menu_navigation_command_router")
current_planet = {}  # –¢–µ–∫—É—â–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ: chat_id - planet_id


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è —É–≥—Ä–æ–∑—ã
def get_danger_emoji(level: int) -> str:
    if level <= 3:
        return "‚úÖ"
    if 4 <= level <= 6:
        return "‚ö†Ô∏è"
    if 7 <= level <= 9:
        return "‚õîÔ∏è"
    if level >= 10:
        return "‚ò¢Ô∏è"

    return "‚ö†Ô∏è"


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø–ª–∞–Ω–µ—Ç—ã
def get_navigation_text(planet: Planet) -> str:
    text = (
        f"ü™ê {planet.name}\n\n"
        f"üìÇ {planet.description}\n\n"
        f"{get_danger_emoji(planet.danger)} –£—Ä–æ–≤–µ–Ω—å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {planet.danger}"
    )
    return text


# –û–±–Ω–æ–≤–ª—è–µ—Ç id –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–∞–Ω–µ—Ç—ã
def update_page_value(chat_id: int, is_next: bool):
    if current_planet[chat_id] - 1 < 0:
        current_planet[chat_id] = len(game_main.PLANETS) - 1

    if current_planet[chat_id] + 1 > len(game_main.PLANETS):
        current_planet[chat_id] = 0

    if is_next:
        current_planet[chat_id] += 1
    else:
        current_planet[chat_id] -= 1


@menu_router.callback_query(F.data.contains("_action_navigation_menu"))
async def change_navigation_menu_page(callback: CallbackQuery):
    if not await callback_check_is_game_active(callback):
        return

    match callback.data:

        # –ò–≥—Ä–æ–∫ –ª–∏—Å—Ç–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–∞–¥
        case "back_action_navigation_menu":
            if constants.DEBUG_MODE:
                print("–ù–∞–∑–∞–¥")
            update_page_value(callback.message.chat.id, False)
            await update_navigation_menu(callback.message.chat.id, callback.message.message_id,
                                         get_navigation_text(
                                             game_main.get_planet_by_id(current_planet[callback.message.chat.id])))

        # –ò–≥—Ä–æ–∫ –ª–∏—Å—Ç–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–∞–ª—å—à–µ
        case "next_action_navigation_menu":
            if constants.DEBUG_MODE:
                print("–î–∞–ª—å—à–µ")
            update_page_value(callback.message.chat.id, True)
            await update_navigation_menu(callback.message.chat.id, callback.message.message_id,
                                         get_navigation_text(
                                             game_main.get_planet_by_id(current_planet[callback.message.chat.id])))
        # –ò–≥—Ä–æ–∫ –≤—ã–±—Ä–∞–ª –ø–ª–∞–Ω–µ—Ç—É
        case "accept_action_navigation_menu":
            if constants.DEBUG_MODE:
                print("–í—ã–±—Ä–∞–Ω–∞ –ø–ª–∞–Ω–µ—Ç–∞.")

            planet = game_main.get_planet_by_id(current_planet[callback.message.chat.id])
            asyncio.create_task(fly_cycle(callback.message.chat.id, planet.name, False))
            await menu_main.bot_send_menu(callback.message.chat.id, callback.message.message_id)
            await bot_send_message(callback.message.chat.id, f"üïí –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—Å—è –Ω–∞ –ø–ª–∞–Ω–µ—Ç—É {planet.name} ...")
            del planet

        # –ò–≥—Ä–æ–∫ –ø–æ–∫–∏–¥–∞–µ—Ç –ø–ª–∞–Ω–µ—Ç—É
        case "leave_planet_action_navigation_menu":
            if constants.DEBUG_MODE:
                print("–ò–≥—Ä–æ–∫ —Ö–æ—á–µ—Ç –ø–æ–∫–∏–Ω—É—Ç—å –ø–ª–∞–Ω–µ—Ç—É.")

            planet = game_main.get_planet_by_id(game_main.ALL_PLAYERS[callback.message.chat.id].planet_id)
            asyncio.create_task(fly_cycle(callback.message.chat.id, planet.name, True))
            await menu_main.bot_send_menu(callback.message.chat.id, callback.message.message_id)
            await bot_send_message(callback.message.chat.id, f"üïí –ü–æ–∫–∏–¥–∞–µ–º –ø–ª–∞–Ω–µ—Ç—É {planet.name} ...")
            del planet

    await callback.answer("> –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ...")


async def update_navigation_menu(chat_id: int, message_id: int, new_text: str):
    await bot_edit_message(chat_id, message_id, new_text, get_menu_navigation_keyboard().as_markup())


def get_on_planet_text(planet: Planet) -> str:
    return (
        f"–°–µ–π—á–∞—Å –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ {planet.name}\n\n"
        f"üìÇ {planet.description}\n\n"
        f"–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –ø–ª–∞–Ω–µ—Ç—É, —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–∫–∏–Ω—É—Ç—å —ç—Ç—É."
    )


def get_fly_text(ship: Ship) -> str:
    return (
        f"üöÄ –ö–æ—Ä–∞–±–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—É—Ç–∏!\n\n"
        f"üïí –û—Å—Ç–∞–ª–æ—Å—å {ship.tech_nav_clock} —Å–µ–∫—É–Ω–¥ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–ª—ë—Ç–∞."
    )


async def handle_navigation_callback(chat_id: int, message_id: int, old_text: str):
    ship: Ship = game_main.ALL_PLAYERS[chat_id]

    # –ï—Å–ª–∏ –∫–æ—Ä–∞–±–ª—å –≤ –ø—É—Ç–∏, –±–ª–æ–∫–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –º–µ–Ω—é.
    if ship.actions_blocked and ship.tech_nav_clock != -1:
        ship.tech_screen = "navigation_waiting"
        game_main.ALL_PLAYERS[chat_id] = ship
        await menu_main.update_menu("navigation_waiting", chat_id, message_id,
                                    old_text)
        return

    if not ship.on_planet:
        planet = random.choice(game_main.PLANETS)
        current_planet[chat_id] = planet.id
        await update_navigation_menu(chat_id, message_id, get_navigation_text(planet))
        del planet
    else:
        planet = game_main.get_planet_by_id(ship.planet_id)
        await bot_edit_message(chat_id, message_id, get_on_planet_text(planet),
                               get_on_planet_menu_navigation_keyboard().as_markup())
        del planet

    del ship


@menu_router.callback_query(F.data == "navigation_menu")
async def navigation(callback: CallbackQuery):
    if not await callback_check_is_game_active(callback):
        return

    await handle_navigation_callback(callback.message.chat.id, callback.message.message_id, callback.message.text)
